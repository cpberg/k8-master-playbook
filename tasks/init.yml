---
- name: Create Kubernetes config directory
  file:
    path: "/home/{{ k8s_user.name }}/.kube"
    state: directory
    owner: "{{ k8s_user.name }}"
    group: "{{ k8s_user.group }}"

- name: Installing Reccomended Master Configuration
  get_url:
    url: https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended.yaml
    dest: "/home/{{ k8s_user.name }}/.kube"
    owner: "{{ k8s_user.name }}"
    group: "{{ k8s_user.group }}"

- name: Installing Kubeconfig Template
  template:
    src: "{{ k8s_config }}.j2"
    dest: "/home/{{ k8s_user.name }}/.kube/{{ k8s_config }}"
    owner: "{{ k8s_user.name }}"
    group: "{{ k8s_user.group }}"

- name: Reset Kubernetes component
  shell: "kubeadm reset --force"

- name: Initialize the Kubernetes cluster using kubeadm
  command: "kubeadm init --apiserver-advertise-address={{ k8s_node_ip }} --apiserver-cert-extra-sans={{ k8s_node_ip }}  --node-name k8s-master --pod-network-cidr={{k8s_cidr }}"

- name: Setup kubeconfig
  copy:
    src: "{{ kubeadmin_config }}" 
    dest: "/home/{{ k8s_user.name }}/.kube/config"
    owner: "{{ k8s_user.name }}"
    group: "{{ k8s_user.group }}"
    remote_src: yes

- name: Deploy kubernetes dashboard into cluster
  become_user: "{{ k8s_user.name }}"
  command: "kubectl --kubeconfig=/home/{{ k8s_user.name }}/.kube/admin.conf apply -f /home/{{ k8s_user.name }}/.kube/recommended.yaml" 
  register: create_result
  until: create_result.rc == 0
  retries: 5
  delay: 2
  ignore_errors: false

- name: Generate join command
  command: kubeadm token create --print-join-command
  register: join_command

- name: Copy join command to local file
  become: false
  local_action: "copy content={{ join_command.stdout_lines[0] }} dest=./join-command"

